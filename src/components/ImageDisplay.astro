---
import { Image } from 'astro:assets';
const { imagePaths } = Astro.props;
---

<div class="gallery-container">
  <div class="gallery">
    {imagePaths.map((path, idx) => (
      <Image 
        src={path} 
        alt={`Image ${idx + 1}`} 
        class="gallery-image" 
        loading="lazy" 
        format="auto" 
        width={500} 
        height={350} 
      />
    ))}
  </div>

  {imagePaths.length > 1 && (
    <div class="dots">
      {imagePaths.map((_, idx) => (
        <span class="dot" data-index={idx}></span>
      ))}
    </div>
  )}
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {

    const galleryContainers = document.querySelectorAll('.gallery-container');
    
    galleryContainers.forEach(galleryContainer => {
        const gallery = galleryContainer.querySelector('.gallery');
        const dots = galleryContainer.querySelectorAll('.dot');
        const imageCount = dots.length;

        if (gallery) {
        
            gallery.addEventListener('scroll', () => {
                const scrollWidth = gallery.scrollWidth - gallery.clientWidth;
                const scrollPosition = gallery.scrollLeft;
                const scrollIndex = Math.round((scrollPosition / scrollWidth) * (imageCount - 1));
              
                dots.forEach((dot, idx) => {
                    dot.classList.toggle('active', idx === scrollIndex);
                });
            });

            if (dots.length > 0) dots[0].classList.add('active');
        }
    });
});
</script>

<style>

.gallery-container {
    position: relative;
    width: 100%;
    max-width: 450px;
    height: 400px; /* Reduced height */
    overflow: hidden;
    margin: 0 auto;
}
    

.gallery {
    display: flex;
    overflow-x: scroll;
    scroll-behavior: smooth;
    scroll-snap-type: x mandatory;
    width: 100%;
    height: 100%;
    padding-top: 30px;
    padding-bottom: 30px;
    gap: 30px; /* Reduced gap between images */
    scrollbar-width: thin;
    scrollbar-color: rgba(30, 58, 138, 0.5) transparent;
}
    
    .gallery::-webkit-scrollbar {
        width: 12px;
        height: 12px;
    }
    
    .gallery::-webkit-scrollbar-thumb {
        background-color: rgba(30, 58, 138, 0.5);
        border-radius: 10px;
        transition: background-color 0.3s;
    }
    
    .gallery::-webkit-scrollbar-thumb:hover {
        background-color: rgba(55, 74, 191, 0.7);
    }
    
    .gallery:hover {
        scrollbar-width: auto;
    }
    
    .gallery::-webkit-scrollbar {
        display: none;
    }
    
    .gallery:hover::-webkit-scrollbar {
        display: block;
    }
    
.gallery-image {
    flex: 0 0 100%;
    width: 100%; /* Ensures image takes full width */
    height: auto;
    max-height: calc(100% - 20px); /* Reduced max height */
    object-fit: contain;
    scroll-snap-align: center;
}
    
.dots {
    display: flex;
    justify-content: center;
    padding-top: 5px; /* Reduced padding */
    position: absolute;
    bottom: 20px; /* Moved dots closer to the bottom */
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
}
    
    .dot {
        height: 10px;
        width: 10px;
        margin: 0 5px;
        background-color: #666;
        border-radius: 50%;
        display: inline-block;
        transition: background-color 0.3s, transform 0.3s;
        cursor: pointer;
    }
    
    .dot.active {
        background-color: #1E3A8A;
        transform: scale(1.5);
    }
